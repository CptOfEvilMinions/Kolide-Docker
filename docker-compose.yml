version: '2.2'
services:
  ############################################## NGINX ##############################################
  nginx:
    build: 
      context: .
      dockerfile: Dockerfile-nginx
    container_name: kolide-nginx
    restart: unless-stopped
    ports: 
      - 8000:80
      - 8443:443
    networks: 
      - default
      - kolide-backend
    depends_on: 
       - kolide

  ############################################## Kolide ##############################################
  kolide:
    build: 
      context: .
      dockerfile: Dockerfile-kolide
    container_name: kolide-webgui
    restart: unless-stopped
    volumes: 
      - kolide-logs:/var/log/osquery
    networks: 
      - kolide-backend
    depends_on:
      - mysql
      - redis

  ############################################## MySQL ##############################################
  mysql:
    build: 
      context: .
      dockerfile: Dockerfile-mysql
    container_name: kolide-mysql
    restart: unless-stopped
    environment: 
      MYSQL_ROOT_PASSWORD: kolide
      MYSQL_DATABASE: kolide
      MYSQL_USER: kolide
      MYSQL_PASSWORD: kolide
    volumes: 
      - kolide-db:/var/lib/mysql
    networks: 
      - kolide-backend

  ############################################## Redis ##############################################
  redis:
    image: redis:latest
    container_name: kolide-redis
    restart: unless-stopped
    networks: 
      - kolide-backend

volumes:
  kolide-db:
  kolide-logs:

networks:
  kolide-backend:
